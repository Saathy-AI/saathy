[tool.poetry]
name = "saathy"
version = "0.1.0"
description = "A FastAPI-based application"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "saathy", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.111"
uvicorn = {extras = ["standard"], version = "^0.29"}
pydantic-settings = "^2.2"
qdrant-client = "^1.9"
sentence-transformers = "^2.7"
apscheduler = "^3.10"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4"
pytest = "^8.3"
pytest-asyncio = "^0.23"
pytest-cov = "^5.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["saathy"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=src/saathy",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
asyncio_mode = "auto"
