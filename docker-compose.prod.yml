secrets:
  qdrant_api_key:
    file: ./secrets/qdrant_api_key
  openai_api_key:
    file: ./secrets/openai_api_key
  grafana_admin_password:
    file: ./secrets/grafana_admin_password

networks:
  saathy-net:
    driver: bridge
  monitoring:
    driver: bridge

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: saathy-api
    restart: unless-stopped
    depends_on:
      - qdrant
    networks:
      - saathy-net
      - monitoring
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
      - QDRANT_URL=http://qdrant:6333
      - QDRANT_API_KEY_FILE=/run/secrets/qdrant_api_key
      - OPENAI_API_KEY_FILE=/run/secrets/openai_api_key
    secrets:
      - qdrant_api_key
      - openai_api_key
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  qdrant:
    image: qdrant/qdrant:v1.9.2
    container_name: saathy-qdrant
    restart: unless-stopped
    ports:
      - "6333:6333"
    networks:
      - saathy-net
    volumes:
      - qdata:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.90.1
    container_name: saathy-otel-collector
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
      - "13133:13133" # health_check
      - "8889:8889" # prometheus exporter
    volumes:
      - ./otel/otel-collector-config.yml:/etc/otelcol-contrib/config.yaml
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:13133"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: saathy-prometheus
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  grafana:
    image: grafana/grafana:10.1.5
    container_name: saathy-grafana
    restart: unless-stopped
    networks:
      - monitoring
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD__FILE=/run/secrets/grafana_admin_password
    secrets:
      - source: grafana_admin_password
        target: grafana_admin_password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:1.25.3
    container_name: saathy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - saathy-net
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl/certs:/etc/nginx/certs:ro
      - ./nginx/ssl/private:/etc/nginx/private:ro
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  qdata:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
